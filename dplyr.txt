packageVersion("dplyr") //версия библиотеки
tbl_df() //преобразовать в какой-то формат dplyr. разобраться

основные функции библиотеки
select(), filter(), arrange(), mutate(), and summarize(), group_by()


выборка
select(dateframe, V1:V3) //отобрать из дф стобцы с 1 по 3, по названиям
select(dateframe, -(V1:V3)) //исключить указанные столбцы

filter(dateframe, V1>30) //отобрать по значению столбца больше 30
filter(dateframe, V1>30, V2==10) //несколько условий через запятую

arrange(dateframe, V1) //отсортировать по столбцу
arrange(dateframe, desc(V1)) //по убыванию

rename(dataframe, revenue=V1, cogs=V2) //переименование столбцов

mutate(dataframe, margin=revenue-cogs) //добавление нового столбца на основании других group_by()

group_by(dataframe, factor) //группировка

summarize(df, V1) //
summarize(by_package, mean(size)) // выводит среднее по группам. сгруппированным с помощью 
summarize(by_package, //по многим параметрам, кол-во, уникальные, уник страны, срденее
                      count = n(),
                      unique = n_distinct(ip_id),
                      countries = n_distinct(country),
                      avg_bytes = mean(size))




%>% // оператор объединения операторов. dateframe %>% любые действия без указания dateframe 

join()
join_all(list(x,y,z)))

arrange(X,var1) //сортировка
arrange(X,desc(var1)) //по убыванию






library(Hmisc)






library(reshape2)

melt(mtcars,id=c("carname","gear","cyl"),measure.vars=c("mpg","hp")) //из данных выбраны столбцы, "carname","gear","cyl". И добавлены 2 столбца (variable и value), в которые перенесены переменные "mpg","hp" с их значением
пример
    carname     gear  cyl variable value
1     Mazda RX4    4   6      mpg  21.0
2 Mazda RX4 Wag    4   6      mpg  21.0
3    Datsun 710    4   4      mpg  22.8
...
2  Ferrari Dino    5   6       hp   175
3 Maserati Bora    5   8       hp   335
4    Volvo 142E    4   4       hp   109

dcast(carMelt, cyl ~ variable) //группировка таблица, кол-во значений. с 4 цилиндрами 11 строк
пример
cyl mpg hp
1   4  11 11
2   6   7  7
3   8  14 14
dcast(carMelt, cyl ~ variable, mean) //среднее 
 cyl      mpg        hp
1   4 26.66364  82.63636
2   6 19.74286 122.28571
3   8 15.10000 209.21429







library(stringr)
nchar("Jeffrey Leek") //кол-о символов
substr("Jeffrey Leek",1,7) //оставить только символы с 1 по 7
paste() //склеить строку из нескольких
paste0() //соединить без пробелов
str_trim("Jeff      ") //удалить лишние пробелы





library(lubridate)

ymd("20140108") //преобразование в указанном порядке
mdy("08/04/2013")
dmy("03-04-2013")
ymd_hms("2011-08-03 10:15:03")
ymd_hms("2011-08-03 10:15:03",tz="Pacific/Auckland")

?Sys.timezone //временные зоны

wday() //день недели, номер
wday(x[1],label=TRUE) //полный формат






library(tidyr)
чтобы преобразовать переменные в названиях столбцов
 grade male female
1     A    1      5
2     B    5      0
3     C    5      2
4     D    5      5
5     E    7      4

gather(students, sex, count, -grade)

grade    sex count
1      A   male     1
2      B   male     5
3      C   male     5
4      D   male     5
5      E   male     7
6      A female     5
7      B female     0
8      C female     2
9      D female     5
10     E female     4


преобразовать названия столбцов в несколько переменных
 grade male_1 female_1 male_2 female_2
1     A      3        4      3        4
2     B      6        4      3        5
3     C      7        4      3        8
4     D      4        0      8        1
5     E      1        1      2        7

res <- gather(students2, sex_class, count, -grade)
grade sex_class count
1      A    male_1     3
2      B    male_1     6
3      C    male_1     7
4      D    male_1     4
5      E    male_1     1
6      A  female_1     4
7      B  female_1     4
8      C  female_1     4
...................
separate(res, col = sex_class, into = c("sex", "class")) можно sep не указывать, т.к. разделяются не буквой/цифрой а нижним подчёркиванием
  grade    sex class count
1      A   male     1     3
2      B   male     1     6
3      C   male     1     7
4      D   male     1     4
5      E   male     1     1
6      A female     1     4
7      B female     1     4
8      C female     1     4
9      D female     1     0
10     E female     1     1
11     A   male     2     3
....................
можно использовать %>%
например
students2 %>%
  gather(sex_class, count, -grade) %>%
  separate(sex_class, into = c("sex", "class")) %>%
  print




преобразовать переменные из строк и названий столбцов в столбцы
    name    test class1 class2 class3 class4 class5
1  Sally midterm      A   <NA>      B   <NA>   <NA>
2  Sally   final      C   <NA>      C   <NA>   <NA>
3   Jeff midterm   <NA>      D   <NA>      A   <NA>
4   Jeff   final   <NA>      E   <NA>      C   <NA>
5  Roger midterm   <NA>      C   <NA>   <NA>      B
6  Roger   final   <NA>      A   <NA>   <NA>      A
7  Karen midterm   <NA>   <NA>      C      A   <NA>
8  Karen   final   <NA>   <NA>      C      A   <NA>
9  Brian midterm      B   <NA>   <NA>   <NA>      A

students3 %>%
        gather(class, grade, class1:class5, na.rm = TRUE) %>%
        spread(test, grade) %>%
        mutate(class = extract_numeric(class))  %>% // extract_numeric(class) убрать из переменной всё, кроме цифр
print

 name class final midterm
1  Brian     1     B       B
2  Brian     5     C       A
3   Jeff     2     E       D
4   Jeff     4     C       A
5  Karen     3     C       C
6  Karen     4     A       A
7  Roger     2     A       C
8  Roger     5     A       B
9  Sally     1     C       A
10 Sally     3     C       B


Чтобы объединить несколько таблиц, разделённых по переменной, нужно создать в каждой столбец с названием и значением по которой они были разделены.


преобразовать и удалить лишнее
  score_range read_male read_fem read_total math_male math_fem math_total write_male write_fem write_total
1     700-800     40151    38898      79049     74461    46040     120501      31574     39101       70675
2     600-690    121950   126084     248034    162564   133954     296518     100963    125368      226331
3     500-590    227141   259553     486694    233141   257678     490819     202326    247239      449565
4     400-490    242554   296793     539347    204670   288696     493366     262623    302933      565556
5     300-390    113568   133473     247041     82468   131025     213493     146106    144381      290487
6     200-290     30728    29154      59882     18788    26562      45350      32500     24933       57433

sat %>%
        select(-contains("total")) %>% //выбираю столбцы которые не содержать слово "тотал"
        gather(part_sex, count, -score_range) %>% //преобр столбцы в переменные, кроме скор-рэндж
        separate(part_sex, c("part", "sex")) %>% //разделяю на две переменные
        group_by(part, sex) %>% //группирую по экзамену и полу
        mutate(total = sum(count), prop = count / total) %>%  //добавляю столбцы с суммой по сгруппированным переменным и доля
        print

  score_range part  sex  count  total       prop
1      700-800 read male  40151 776092 0.05173485
2      600-690 read male 121950 776092 0.15713343
3      500-590 read male 227141 776092 0.29267278
4      400-490 read male 242554 776092 0.31253253
5      300-390 read male 113568 776092 0.14633317
6      200-290 read male  30728 776092 0.03959324
7      700-800 read  fem  38898 883955 0.04400450
8      600-690 read  fem 126084 883955 0.14263622
9      500-590 read  fem 259553 883955 0.29362694
10     400-490 read  fem 296793 883955 0.33575578
..         ...  ...  ...    ...    ...        ...





library(lubridate)

today()
year(), month(), day() wday() now() hour(), minute(), and second() 
ymd()
mdy()
dym()
...
ymd_hms()
hms()
...
update(this_moment, hours = 8, minutes = 34, seconds = 55) //исправить в дате указанные параметры, чмс. саму переменную this_moment не меняет
now("America/New_York") //время в указанной временной зоне
nyc + days(2) //добавляет к дате 2 дня
with_tz(time, tzone = "") //перевести дату и время в другой часовой пояс
























