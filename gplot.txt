сначала инициация графики функцией, потом аннотация и добавление линий, точек и т.п.
example(points) //типы точек pch

plot(x, y, type = "n") //инициировать график, но не заполнять его данными
point(x,y, col = "green") //заполнить точками зелёного цвета
можно дальше заполнять

boxplot(pollution$pm25, col = "blue") //графически медиана и вокруглежащие
hist(pollution$pm25, col = "green") //гистограмма. показатель-его частость
rug(pollution$pm25) //детализация точек под гистограммой
hist(pollution$pm25, col = "green", breaks = 100) //кол-во баров в гистограмме

boxplot(pollution$pm25, col = "blue") 
abline(h = 12) //добавляет горизонтальную линию на уровне 12

hist(pollution$pm25, col = "green") /гистограмма
abline(v = 12, lwd = 2) //добавить вертикальную линию на уровне 12, толщиной 2
abline(v = median(pollution$pm25), col = "magenta", lwd = 4) //добавить вертикальную линию на уровне медианы, цвета магента, толщиной 4

pairs(airquality) //графики зависимостей всех от всех. матрица графиков



barplot(table(pollution$region), col = "wheat", main = "Number of Counties in Each Region") //барплот суммирование количества по регионам

boxplot(pm25 ~ region, data = pollution, col = "red") //зависимость рм25 от региона


par(mfrow = c(2, 1), mar = c(4, 4, 2, 1)) //графики в одну строку, 2 столбца, границы снизу-слева-сверху-справа
hist(subset(pollution, region == "east")$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
две диаграммы, по востоку и западу

par(mfrow=c(1,1), mar=c(5, 4, 4, 2) + 0.1) //по умолчанию

with(pollution, plot(latitude, pm25)) //точечный график загрязнение/широта
abline(h = 12, lwd = 2, lty = 2) //пунктирная линия на уровне 12


with(pollution, plot(latitude, pm25, col = region)) 
abline(h = 12, lwd = 2, lty = 2)


par(mfrow = c(1, 2), mar = c(5, 4, 2, 1)) /две рядом, слева и справа
with(subset(pollution, region == "west"), plot(latitude, pm25, main = "West"))
with(subset(pollution, region == "east"), plot(latitude, pm25, main = "East"))

with(airquality, plot(Wind, Ozone)) //график из данных эйркволити, зависимость озона от ветра
title(main = "Ozone and Wind in New York City")  ## Add a title

with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City")) //сразу с названием

with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue")) //выбрать 5 месяц и на графике выделить цветом 


with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City", type = "n")) //график без данных
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(subset(airquality, Month != 5), points(Wind, Ozone, col = "red"))
legend("topright", pch = 1, col = c("blue", "red"), legend = c("May", "Other Months")) //добавить легенду

with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City", pch = 20)) //другой вид точек
model <- lm(Ozone ~ Wind, airquality) //линейная модель
abline(model, lwd = 2) //нарисовать линию


boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)") //зависимость в каждом месяце

par(mfrow = c(1, 2)) //два графика по горизонтали
with(airquality, {
    plot(Wind, Ozone, main = "Ozone and Wind")
    plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
})


par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0)) //3 диаграммы в строку, уменьшение границ, внешние границы в 0 почти все
with(airquality, {
    plot(Wind, Ozone, main = "Ozone and Wind")
    plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
    plot(Temp, Ozone, main = "Ozone and Temperature")
    mtext("Ozone and Weather in New York City", outer = TRUE) //подпись за пределом границ
})



?Devices //перечень устройств куда можно вывести график: окно, файл и т.п.

запись графика в файл
pdf(file = "myplot.pdf")  ## Open PDF device; create 'myplot.pdf' in my working directory
## Create plot and send to a file (no plot appears on screen)
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")  ## Annotate plot; still nothing on screen
dev.off()  ## Close the PDF file device
## Now you can view the file 'myplot.pdf' on your computer

скопировать график с экрана в файл
library(datasets)
with(faithful, plot(eruptions, waiting))  ## Create plot on screen device
title(main = "Old Faithful Geyser data")  ## Add a main title
dev.copy(png, file = "geyserplot.png")  ## Copy my plot to a PNG file
dev.off()  ## Don't forget to close the PNG device!
















параметры
pch: the plotting symbol (default is open circle)
lty: the line type (default is solid line), can be dashed, dotted, etc.
lwd: the line width, specified as an integer multiple
col: the plotting color, specified as a number, string, or hex code; the colors() function gives you a vector of colors by name
xlab: character string for the x-axis label
ylab: character string for the y-axis label
глобальные параметры par()
las: the orientation of the axis labels on the plot
bg: the background color
mar: the margin size
oma: the outer margin size (default is 0 for all sides)
mfrow: number of plots per row, column (plots are filled row-wise)
mfcol: number of plots per row, column (plots are filled column-wise)
с помощью par("col") //можно проверить заданные значения

функции
plot: make a scatterplot, or other type of plot depending on the class of the object being plotted
lines: add lines to a plot, given a vector x values and a corresponding vector of y values (or a 2-column matrix); this function just connects the dots
points: add points to a plot
text: add text labels to a plot using specified x, y coordinates
title: add annotations to x, y axis labels, title, subtitle, outer margin
mtext: add arbitrary text to the margins (inner or outer) of the plot
axis: adding axis ticks/labels


















library(lattice) //строит графики одной функцией, можно править только в ней
xyplot: this is the main function for creating scatterplots
bwplot: box-and-whiskers plots (“boxplots”)
histogram: histograms
stripplot: like a boxplot but with actual points
dotplot: plot dots on "violin strings"
splom: scatterplot matrix; like pairs in base plotting system
levelplot, contourplot: for plotting "image" data

xyplot(Ozone ~ Wind, data = airquality) //обычный график зависимости озона от ветра

airquality <- transform(airquality, Month = factor(Month)) /месяц преобразован в фактор
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1)) //5 графиков за каждый месяц, в строку

p <- xyplot(Ozone ~ Wind, data = airquality)  ## Nothing happens!
print(p)  ## Plot appears


set.seed(10) /фикс случайных величин
x <- rnorm(100)
f <- rep(0:1, each = 50) /переменные 0 и 1 по 50 раз каждая
y <- x + f - f * x + rnorm(100, sd = 0.5) //линейная зависимость у от х и ф
f <- factor(f, labels = c("Group 1", "Group 2")) //переменную делаем фактором
xyplot(y ~ x | f, layout = c(2, 1))  ## Plot with 2 panels //


xyplot(y ~ x | f, panel = function(x, y, ...) { //используем новую функцию, которую задаём параметру панель, чтобы построить график, а потом добавить горизонтальную линию на уровне медианы в каждом графике
    panel.xyplot(x, y, ...)  ## First call the default panel function for 'xyplot'
    panel.abline(h = median(y), lty = 2)  ## Add a horizontal line at the median
})


xyplot(y ~ x | f, panel = function(x, y, ...) {
    panel.xyplot(x, y, ...)  ## First call default panel function
    panel.lmline(x, y, col = 2)  ## Overlay a simple linear regression line //добавляем линию регрессии
})




state <- data.frame(state.x77, region = state.region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1)) //4 графика, зависимость продолж-ти жизни от дохода в каждом регионе отдельно




library(ggplot2)
data(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)//график зависимости displ от hwy с выделением цветом по фактору drv
qplot(displ, hwy, data = mpg, geom = c("point",	"smooth")) //добавить две фигуры, серую область и линию сглаживания

qplot(hwy, data	= mpg, fill=drv)// гистограмма с выделением факторов цветом

если точка слева от ~ , то горизонтально графики, и наоборот
qplot(displ, hwy, data	=mpg, facets=.~	drv) //три графика разделённых по фактору drv
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2) //три гистограммы, разделённые по фактору, толщина столбца 2

qplot(log(eno),	data =	maacs,	geom = "density") //график в форме кривой
qplot(log(eno),	data =	maacs,	geom = "density", color	= mopos) //два графика разного цвета

qplot(log(pm25), log(eno), data	= maacs, shape = mopos) //разделить по форме точек	

qplot(log(pm25), log(eno), data	= maacs, color	= mopos, geom =	c("point", "smooth"), method = "lm")//добавить линейную модель
qplot(log(pm25),log(eno), data = maacs, geom = c("point", "smooth"), method = "lm", facets = . ~ mopos) //тоже самое только разделено на 2 графика

summary(g) работает и для графика, если его присвоить переменной g

g <- ggplot(maacs, aes(log(pm25), mopos)) //задать график лог и мопос
g + geom_point()  //вывести график с реквизитами по умолчанию
+ geom_smooth() //добавить линию сглаживания
+ geom_smooth(method = "lm”) //линейная модель
+ facet_grid(. ~ mopos) //разбить на несколько графиков по фактору

+geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE) //сглаженная линия размером, типом пунктир, линейная регрессия, 

g + geom_point(size=4, alpha=1/2, color = "steelblue") //размер точек, прозрачность, цвет
g + geom_point(size=4, alpha=1/2, aes(color = mopos)) //цвет по факторной переменной, через функцию aes()

g + geom_point(aes(color = mopos)) + labs(title = "MAACS Cohort") + labs(x = expression("log" * PM[2.5]), y = "something") //подпись осей/названия с помощью функц labs()

g + geom_point(aes(color = mopos)) + theme_bw(base_family = "Times") //график с темой ч/б и шрифтом таймс

g + geom_line() //график линией
g + geom_line() + ylim(-3, 3) //график только по данным, где У в пределах
g + geom_line() + coord_cartesian(ylim = c(-3, 3)) //график с ограничением системы координат


cutpoints <- quantile(maacs$logno2_new, seq(0, 1, length = 4), na.rm = TRUE) ## Calculate the deciles of the data
maacs$no2dec <- cut(maacs$logno2_new, cutpoints) //преобразовать цифры в факторы ## Cut the data at the deciles and create a new factor variable
levels(maacs$no2dec) ## See the levels of the newly created factor variable



## Setup ggplot with data frame
g <- ggplot(maacs, aes(logpm25, NocturnalSympt)) //задаём график
## Add layers
g + geom_point(alpha = 1/3) //прозрачность
 + facet_wrap(bmicat ~ no2dec, nrow = 2, ncol = 4) //кол-во графиков и по какому принципу разделяем
 + geom_smooth(method="lm", se=FALSE, col="steelblue") //линии регрессии синего цвета, выключены standard error bars
 + theme_bw(base_family = "Avenir", base_size = 10) //тема и шрифт и его размер
 + labs(x = expression("log " * PM[2.5]) //подписи
 + labs(y = "Nocturnal Symptoms”)
 + labs(title = "MAACS Cohort”)

























