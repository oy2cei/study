clear
git config --list переменные и алиасы
git init при нахождении в папке заводит новый репозиторий папку .git
git status проверить что за файлы есть и в каком статусе
git add filename.ext добавить файл к отслеживаемым, его можно будет закоммитить. можно точку поставить и будут добавлены все файлы. после изменения тоже нужно добавлять
git commit закоммитить файлы, которые были добавлены командой эдд и поменялись
git commit -m 'comment to the commit'
git commit -a -m 'comment' выполнить команду add потом закоммитить с комментарием 
git log данные коммита
git log -p откроет все коммиты и сами файлы с кодом, который закоммитили. выйти из режима можно с помощью q
git log -p -2 только 2 последних коммита
git mv oldfilename newfilename
git checkout (8 цифр коммита) которые видны в списке после git log. откат до нужного коммита
git checkout master откат к последнему коммиту
git diff показать изменения в файлах, которые были изменены. нужно желать до добавления
git diff --cached посмотреть изменения, если файл изменён и уже добавлен командой git add
git diff --staged то же самое
git reset HEAD filename.ext убрать из подготовленных ненужный файл, если его не нужно будет коммитить
rm filename.ext удалить файл
git rm filename.ext удалить файл при следующем коммите, из папки будет сразу удалён
git reset HEAD filename.ext откатиться только по указанному файлу
git checkout -- filename.ext отменить изменение/удаление файла



работа с ветками
git branch посмотреть ветки
git branch bugFix новая ветка с именем багфикс
git checkout bugFix переключиться на ветку багфикс
git checkout -b hotFix создание новой ветки и переключение на неё
git branch -d hotFix удалить ветку
git branch -D hotFix принудительно удалить ветку, например если не удаляется,т.к. с она прошла слияние с мастер не полностью
git merge bugFix объединить текущую ветку с багфикс
если при merge был конфликт, в конфликтующий файл вносятся метки, между которыми есть обе версии строк кода, нужно оставить одну версию и удалить сами метки и сохранить файл

git log --graph просмотр лога со схематичным  указанием веток




работа с удалённым репозиторием
clone полностью скопировать удаленный репозиторий
pull затянуть изменения и сделать merge
fetch посомтреть что было изменено и потом сделать слияние
push залить на удаленный сервер

git remote add site https://github.com/oy2cei/sales.git добавить алиас site который содержит адрес
git remote посомтреть какие есть алиасы для удалённых репозиториев
git remote -v тоже самое с адресом
git push site master загрузить на сайт ветку мастер
git push -u site master без доп сообщений
git branch -a все ветки, включая удаленную
git clone https://github.com/oy2cei/sales.git скопировать в текущую папку весь удаленный репозиторий
git fetch site забирает ветки но не заливает их и не мерджит
git checkout -b new test/branch потом создать новую ветку и забрать после фетча только необходимую ветку
git merge test/master соединить свою текущую ветку с удаленной веткой после фетча
git remote rm test удалить алиасы
git remote rename test site переименовать алиасы

sourcetree
netbeans

















